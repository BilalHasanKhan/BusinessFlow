@{
    ViewBag.Title = "Production Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section head {
  <script src="@Url.Content("~/Scripts/2011.3.1115/jquery-1.6.4.min.js")" type="text/javascript"></script>
 <script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>


}


<div id="content">
<div class="gridMessageSuccess">
     <h4>New Projects</h4>     
     <p>The list below shows projects newly confirmed projects.</p>

@(Html.Telerik().Grid<BusinessFlow.ViewModels.AccountsViewModel>()
            .Name("Grid")
            .DataKeys(keys => keys.Add(e => e.EnquiryId)
                                          .RouteKey("EnquiryId") // post the data key as "EnquiryID"
                                          
            )
             .DataBinding(dataBinding =>
                 {
                     dataBinding.Ajax()
                         .Select("Select", "Production");
                 })
            .Columns(columns =>
            {
                columns.Bound(e => e.EnquiryId).ReadOnly().Width(20).Format(Html.ActionLink("{0}", "Details", new { id = "{0}" }).ToHtmlString()).Encoded(false);
                columns.Bound(e => e.ContactName).ReadOnly().Width(150);
                columns.Bound(e => e.SiteAddress).ReadOnly().Width(200);
                columns.Bound(e => e.Requirement).ReadOnly().Width(200);
                columns.Bound(e => e.TentativeDeliveryDate).Width(50);
                columns.Bound(e => e.DesignerEmail).ReadOnly().Width(100);
                columns.Bound(e => e.Attachment).ReadOnly().Width(40);
                columns.Bound(e => e.Status).Width(200); // display the status name
                columns.Command(commands =>
                {
                    commands.Custom("Assign").Text("Assign").Action("Assign", "Production")
                                                                .ButtonType(GridButtonType.Text);
                    commands.Custom("Download").Text("Download").Action("Download", "Production")
                                                                .ButtonType(GridButtonType.Text);
                    
                }).Width(200);
            })
            .Sortable(sort => sort.OrderBy(order => order.Add(e => e.EnquiryId).Descending())) // order by EnquiryID so that inserted items appear on top of the grid (optional)
            .Pageable())
</div>
</div>
<div id="content">
   <div class="gridMessageSuccess">
     <h4>Existing Projects</h4>     
     <p>The list below shows existing projects. Click on id to view current progress </p>        
@(Html.Telerik().Grid<BusinessFlow.ViewModels.AccountsViewModel>()
            .Name("noadvance")
            .DataKeys(keys => keys.Add(e => e.EnquiryId)
                                          .RouteKey("EnquiryId") // post the data key as "EnquiryID"
            )
             .DataBinding(dataBinding =>
                 {
                     dataBinding.Ajax()
                         .Select("SelectExistingProjects", "Production")
                         ;
                         
                 })
            .Columns(columns =>
            {
                columns.Bound(e => e.EnquiryId).ReadOnly().Width(20).Format(Html.ActionLink("{0}", "Details", new { id = "{0}" }).ToHtmlString()).Encoded(false);
                columns.Bound(e => e.ContactName).ReadOnly().Width(150);
                columns.Bound(e => e.SiteAddress).ReadOnly().Width(200);
                columns.Bound(e => e.Requirement).ReadOnly().Width(200);
                columns.Bound(e => e.TentativeDeliveryDate).Width(50);
                columns.Bound(e => e.DesignerEmail).ReadOnly().Width(100);
                columns.Bound(e => e.Attachment).ReadOnly().Width(40);
                columns.Bound(e => e.Status).Width(200); // display the status name
                columns.Command(commands =>
                {
                   
                    commands.Custom("Download").Text("Download").Action("Download", "Production").ButtonType(GridButtonType.Text);
                }).Width(200);
            })
            .Sortable(sort => sort.OrderBy(order => order.Add(e => e.EnquiryId).Descending())) // order by EnquiryID so that inserted items appear on top of the grid (optional)
            .Pageable())

        

</div>
</div>

   <div>
           @(Html.Telerik().ScriptRegistrar().
           OnDocumentReady(@<text></text>)
           .Globalization(true))
           
           
           </div> 