
@{
    ViewBag.Title = "Accounts Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section head {
<script src="@Url.Content("~/Scripts/2011.3.1115/jquery-1.6.4.min.js")" type="text/javascript"></script>
 <script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.min.js")" type="text/javascript"></script>
    <script src="../../Scripts/2011.3.1115/telerik.common.min.js" type="text/javascript"></script>
    <script src="../../Scripts/2011.3.1115/telerik.grid.min.js" type="text/javascript"></script>
    <script src="../../Scripts/2011.3.1115/telerik.grid.editing.min.js" type="text/javascript"></script>

 <script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>


}


<div id="content">
<div class="gridMessageSuccess">
     <h4>Advance Paid</h4>     
     <p>The list below shows projects having confirmed status and advance amount of 10,000 or more paid</p>

@(Html.Telerik().Grid<BusinessFlow.ViewModels.AccountsViewModel>()
            .Name("Grid")
            .DataKeys(keys => keys.Add(e => e.EnquiryId)
                                          .RouteKey("EnquiryId") // post the data key as "EnquiryID"
            )
             .DataBinding(dataBinding =>
                 {
                     dataBinding.Ajax()
                         .Select("Select", "Accounts")
                         .Update("Update", "Accounts")
                         .Delete("Delete","Accounts");
                 })
            .Columns(columns =>
            {
                columns.Bound(e => e.EnquiryId).ReadOnly().Width(20).Format(Html.ActionLink("{0}", "Details", new { id = "{0}" }).ToHtmlString()).Encoded(false);
                columns.Bound(e => e.ContactName).ReadOnly().Width(150);
                columns.Bound(e => e.SiteAddress).ReadOnly().Width(200);
                columns.Bound(e => e.Requirement).ReadOnly().Width(200);
                columns.Bound(e => e.TentativeDeliveryDate).Width(50);
                columns.Bound(e => e.DesignerEmail).ReadOnly().Width(100);
                columns.Bound(e => e.Amount).ReadOnly().Width(50);
                columns.Bound(e => e.Attachment).ReadOnly().Width(40);
                columns.Bound(e => e.Status).ClientTemplate("<#= Status #>").Width(200); // display the status name
                columns.Command(commands =>
                {
                    commands.Edit().ButtonType(GridButtonType.Image);
                    commands.Delete().ButtonType(GridButtonType.Image);
                }).Width(150);
            })
            .Sortable(sort => sort.OrderBy(order => order.Add(e => e.EnquiryId).Descending())) // order by EnquiryID so that inserted items appear on top of the grid (optional)
            .Pageable())
</div>
</div>

<div id="content">
   <div class="gridMessageInfo">
     <h4>Advance Not Paid</h4>     
     <p>The list below shows projects having confirmed status but no advance amount paid</p>        
@(Html.Telerik().Grid<BusinessFlow.ViewModels.AccountsViewModel>()
            .Name("noadvance")
            .DataKeys(keys => keys.Add(e => e.EnquiryId)
                                          .RouteKey("EnquiryId") // post the data key as "EnquiryID"
            )
             .DataBinding(dataBinding =>
                 {
                     dataBinding.Ajax()
                         .Select("SelectNoAdvance", "Accounts")
                         .Update("Update", "Accounts")
                         .Delete("Delete","Accounts");
                 })
            .Columns(columns =>
            {
                columns.Bound(e => e.EnquiryId).ReadOnly().Width(20);
                columns.Bound(e => e.ContactName).ReadOnly().Width(150);
                columns.Bound(e => e.SiteAddress).ReadOnly().Width(200);
                columns.Bound(e => e.Requirement).ReadOnly().Width(200);
                columns.Bound(e => e.TentativeDeliveryDate).Width(50);
                columns.Bound(e => e.DesignerEmail).ReadOnly().Width(100);
                columns.Bound(e => e.Attachment).ReadOnly().Width(40);
                columns.Bound(e => e.Status).ClientTemplate("<#= Status #>").Width(200); // display the status name
                columns.Command(commands =>
                {
                    commands.Edit().ButtonType(GridButtonType.Image);
                    commands.Delete().ButtonType(GridButtonType.Image);
                }).Width(200);
            })
            .Sortable(sort => sort.OrderBy(order => order.Add(e => e.EnquiryId).Descending())) // order by EnquiryID so that inserted items appear on top of the grid (optional)
            .Pageable())

        

</div>
</div>

   <div>
           @(Html.Telerik().ScriptRegistrar().
           OnDocumentReady(@<text></text>)
           .Globalization(true))
           
           
           </div> 